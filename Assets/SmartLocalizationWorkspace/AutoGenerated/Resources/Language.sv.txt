<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="Audio.Close" xml:space="preserve">
		<value>Stäng</value>
	</data>
	<data name="Audio.Settings.MasterVolume" xml:space="preserve">
		<value>Huvudvolym</value>
	</data>
	<data name="Audio.Settings.Music" xml:space="preserve">
		<value>Musik</value>
	</data>
	<data name="Audio.Settings.Sfx" xml:space="preserve">
		<value>Effekter</value>
	</data>
	<data name="Audio.Title" xml:space="preserve">
		<value>Ljud</value>
	</data>
	<data name="Controls.Button" xml:space="preserve">
		<value>Knapp</value>
	</data>
	<data name="Controls.Dropdown.OptionOne" xml:space="preserve">
		<value>Val 1</value>
	</data>
	<data name="Controls.Dropdown.OptionTwo" xml:space="preserve">
		<value>Val 2</value>
	</data>
	<data name="Controls.InputArea.PlaceHolder" xml:space="preserve">
		<value>Skriv text...</value>
	</data>
	<data name="Controls.InputField.PlaceHolder" xml:space="preserve">
		<value>Skriv text...</value>
	</data>
	<data name="Controls.ScrollView.Content" xml:space="preserve">
		<value>En skrollrektangel används oftast för att skrolla en stor bild eller panel som tillhör ett annat UI-element. t.ex. en lista av knappar eller ett stort stycke text. Skrollrektangeln används oftast också med ett maskelement och är designat att fungera sömlöst med skrollhandtag.

För att skrolla ett innehåll, måste knapptryckningar och musdrag tas emot på insidan av skrollrektangeln, inte på själva innehållet.

Skrollrektangeln används oftast med ett maskelement. Lägg till ett bildskript som maskelementet kan använda och lägg sedan till maskningsskriptet. Maskningselementet kommer använda bilden för att skapa maskningen. En specifik bild behöver inte användas på bildskriptet, men det går att lägga till en för ökad kontrol över maskningsformen.

Var försiktig när du använder oreglerad skrollning eftersom det är möjligt att förlora kontrollen på ett sätt som inte går att ångra. När elastisk eller reglerade inställningar används är det bäst att positionera innehållet så att det startar inom gränserna för skrollrektangeln - annars kanske oönskat beteende uppstår eftersom RectTransform-objektet försöker positionera innehållet till sin ursprungsposition.</value>
	</data>
	<data name="Controls.ScrollView.Title" xml:space="preserve">
		<value>Skrollvy</value>
	</data>
	<data name="Controls.Text" xml:space="preserve">
		<value>Ny text</value>
	</data>
	<data name="Controls.Toggle" xml:space="preserve">
		<value>Växla</value>
	</data>
	<data name="Controls.ToggleGroup.OptionA" xml:space="preserve">
		<value>Val A</value>
	</data>
	<data name="Controls.ToggleGroup.OptionB" xml:space="preserve">
		<value>Val B</value>
	</data>
	<data name="Controls.ToggleGroup.OptionC" xml:space="preserve">
		<value>Val C</value>
	</data>
	<data name="DragAndDrop.DragFromHere" xml:space="preserve">
		<value>Dra Objekt Härifrån</value>
	</data>
	<data name="DragAndDrop.DropAreaOne" xml:space="preserve">
		<value>Släpp Här</value>
	</data>
	<data name="DragAndDrop.DropAreaTwo" xml:space="preserve">
		<value>Släpp Här</value>
	</data>
	<data name="DraggablePanel.Panel.Content" xml:space="preserve">
		<value>Dra i rubrikområdet för att flytta på fönstret.

Dra nere i högra hörnet för att ändra storleken på fönstret.</value>
	</data>
	<data name="DraggablePanel.Panel.Title" xml:space="preserve">
		<value>Panel</value>
	</data>
	<data name="DraggablePanel.TogglePanel" xml:space="preserve">
		<value>Visa/Göm Panel</value>
	</data>
	<data name="Gameplay.Close" xml:space="preserve">
		<value>Stäng</value>
	</data>
	<data name="Gameplay.Settings.Difficulty" xml:space="preserve">
		<value>Svårighet</value>
	</data>
	<data name="Gameplay.Settings.MouseScroll" xml:space="preserve">
		<value>Skrollhastighet</value>
	</data>
	<data name="Gameplay.Settings.MovementSpeed" xml:space="preserve">
		<value>Rörelsehastighet</value>
	</data>
	<data name="Gameplay.Settings.PermaDeath" xml:space="preserve">
		<value>Perma-död</value>
	</data>
	<data name="Gameplay.Title" xml:space="preserve">
		<value>Spelinställningar</value>
	</data>
	<data name="Language.Close" xml:space="preserve">
		<value>Stäng</value>
	</data>
	<data name="Language.Settings.English" xml:space="preserve">
		<value>Engelska</value>
	</data>
	<data name="Language.Settings.Swedish" xml:space="preserve">
		<value>Svenska</value>
	</data>
	<data name="Language.Title" xml:space="preserve">
		<value>Språk</value>
	</data>
	<data name="LayoutGroups.Cancel" xml:space="preserve">
		<value>Avbryt</value>
	</data>
	<data name="LayoutGroups.OK" xml:space="preserve">
		<value>OK</value>
	</data>
	<data name="LayoutGroups.Title" xml:space="preserve">
		<value>Rutnät</value>
	</data>
	<data name="Lighting.Blue" xml:space="preserve">
		<value>Blå</value>
	</data>
	<data name="Lighting.Content" xml:space="preserve">
		<value>Detta exempel visar hur en sätter upp ett UI som påverkas av ljuskällor som ger den där lilla extra känslan av detalj och djup i dina menyer.

Glöm inte att lägga till ljuskällor!

Några element påverkas av ljuset. Andra gör det inte. Allt beror på materialet som används av de grafiska elementen.</value>
	</data>
	<data name="Lighting.Green" xml:space="preserve">
		<value>Grön</value>
	</data>
	<data name="Lighting.Red" xml:space="preserve">
		<value>Röd</value>
	</data>
	<data name="Lighting.Title" xml:space="preserve">
		<value>Upplyst Meny</value>
	</data>
	<data name="MainMenu.Continue" xml:space="preserve">
		<value>Fortsätt</value>
	</data>
	<data name="MainMenu.NewGame" xml:space="preserve">
		<value>Nytt Spel</value>
	</data>
	<data name="MainMenu.Quit" xml:space="preserve">
		<value>Avsluta</value>
	</data>
	<data name="MainMenu.Settings" xml:space="preserve">
		<value>Inställningar</value>
	</data>
	<data name="MainMenu.Title" xml:space="preserve">
		<value>Menydemo</value>
	</data>
	<data name="RenderTextures.Content" xml:space="preserve">
		<value>Bilden till höger blir konstant uppdaterad av en kamera som renderar till renderingstexturen som den använder!</value>
	</data>
	<data name="RenderTextures.Title" xml:space="preserve">
		<value>Renderingstexturer</value>
	</data>
	<data name="Settings.Audio" xml:space="preserve">
		<value>Ljud</value>
	</data>
	<data name="Settings.Back" xml:space="preserve">
		<value>Stäng</value>
	</data>
	<data name="Settings.Gameplay" xml:space="preserve">
		<value>Spelinställningar</value>
	</data>
	<data name="Settings.Language" xml:space="preserve">
		<value>Språk</value>
	</data>
	<data name="Settings.Title" xml:space="preserve">
		<value>Inställningar</value>
	</data>
	<data name="Settings.Video" xml:space="preserve">
		<value>Video</value>
	</data>
	<data name="Video.Close" xml:space="preserve">
		<value>Stäng</value>
	</data>
	<data name="Video.Settings.AntiAliasing" xml:space="preserve">
		<value>Kantutjämning</value>
	</data>
	<data name="Video.Settings.MouseScrollToggle" xml:space="preserve">
		<value>AO</value>
	</data>
	<data name="Video.Settings.Quality" xml:space="preserve">
		<value>Kvalitet</value>
	</data>
	<data name="Video.Settings.ViewDistance" xml:space="preserve">
		<value>Vyavstånd</value>
	</data>
	<data name="Video.Title" xml:space="preserve">
		<value>Video</value>
	</data>
</root>